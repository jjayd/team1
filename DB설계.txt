<설계>

배달 채팅방 테이블
 - 카테고리 번호, 채팅방 번호, 최대 이용자, 현재 이용자, 방장 번호, 위치 좌표, 방 존재 여부, 생성 시간, 성별조건, 배달시간

운동 채팅방 테이블
  - 카테고리 번호, 채팅방 번호, 최대 이용자, 현재 이용자,  방장 번호, 방 존재 여부, 생성 시간, 성별조건, 운동 시간, 제목, 내용, 

게임 채팅방 테이블
  - 카테고리 번호, 채팅방 번호, 최대 이용자, 현재 이용자,  방장 번호, 방 존재 여부, 생성 시간, 성별조건, 게임 시간, 제목, 내용
 
취업스터디 채팅방 테이블
 - 카테고리 번호, 채팅방 번호, 최대 이용자, 현재 이용자, 방장 번호, 방 존재 여부, 생성 시간, 성별조건, 회사, 직무, 제목, 내용

공모전 채팅방 테이블
 - 카테고리 번호, 채팅방 번호, 최대 이용자, 현재 이용자, 방장 번호, 방 존재 여부, 생성 시간, 성별조건, 분야, 제목, 내용

메세지 테이블
 - 메세지 번호, 메세지 순서, 메세지 주인 번호, 카테고리 번호, 채팅방 번호, 메세지 내용, 메세지 보낸 시간

이용자 테이블
 - 이용자 번호, 이름, 성별, 가입 일자, ID, 패스워드, 전화번호, 이메일, (활동 로그, 가입 정보)

취식가능 장소 테이블
 - 장소, 좌표

배달 채팅방 - 음식종류 테이블
 - 채팅방번호, 음식종류


CREATE TABLE DELIVER_ROOM(
 CNO VARCHAR(1) NOT NULL,
 RNO VARCHAR(10) NOT NULL,
 MaxUser TINYINT NOT NULL,
 CurUser TINYINT NOT NULL,
 UNO VARCHAR(10) NOT NULL,
 X FLOAT(4) NOT NULL,
 Y FLOAT(4) NOT NULL,
 IsExist BOOL NOT NULL,
 RoomTime DATE NOT NULL,
 Gender VARCHAR(1) NOT NULL,
 StartTime DATE NOT NULL,
 PRIMARY KEY(CNO, RNO)
);

CREATE TABLE SPORTS_ROOM(
 CNO VARCHAR(1) NOT NULL,
 RNO VARCHAR(10) NOT NULL,
 MaxUser TINYINT NOT NULL,
 CurUser TINYINT NOT NULL,
 UNO VARCHAR(10) NOT NULL,
 IsExist BOOL NOT NULL,
 RoomTime DATE NOT NULL,
 Gender VARCHAR(1) NOT NULL,
 StartTime DATE NOT NULL,
 Title VARCHAR(30) NOT NULL,
 Contents VARCHAR(255) NOT NULL,
 PRIMARY KEY(CNO, RNO)
);

CREATE TABLE GAME_ROOM(
 CNO VARCHAR(1) NOT NULL,
 RNO VARCHAR(10) NOT NULL,
 MaxUser TINYINT NOT NULL,
 CurUser TINYINT NOT NULL,
 UNO VARCHAR(10) NOT NULL,
 IsExist BOOL NOT NULL,
 RoomTime DATE NOT NULL,
 Gender VARCHAR(1) NOT NULL,
 StartTime DATE NOT NULL,
 Title VARCHAR(30) NOT NULL,
 Contents VARCHAR(255) NOT NULL,
 PRIMARY KEY(CNO, RNO)
);

CREATE TABLE STUDY_ROOM(
 CNO VARCHAR(1) NOT NULL,
 RNO VARCHAR(10) NOT NULL,
 MaxUser TINYINT NOT NULL,
 CurUser TINYINT NOT NULL,
 UNO VARCHAR(10) NOT NULL,
 IsExist BOOL NOT NULL,
 RoomTime DATE NOT NULL,
 Gender VARCHAR(1) NOT NULL,
 StartTime DATE NOT NULL,
 Company VARCHAR(20) NOT NULL,
 Job VARCHAR(20) NOT NULL,
 Title VARCHAR(30) NOT NULL,
 Contents VARCHAR(255) NOT NULL,
 PRIMARY KEY(CNO, RNO)
);

CREATE TABLE CONTEST_ROOM(
 CNO VARCHAR(1) NOT NULL,
 RNO VARCHAR(10) NOT NULL,
 MaxUser TINYINT NOT NULL,
 CurUser TINYINT NOT NULL,
 UNO VARCHAR(10) NOT NULL,
 IsExist BOOL NOT NULL,
 RoomTime DATE NOT NULL,
 Gender VARCHAR(1) NOT NULL,
 StartTime DATE NOT NULL,
 Field VARCHAR(20) NOT NULL,
 Title VARCHAR(30) NOT NULL,
 Contents VARCHAR(255) NOT NULL,
 PRIMARY KEY(CNO, RNO)
);


CREATE TABLE USER(
 UNO VARCHAR(10) NOT NULL,
 Uname VARCHAR(10) NOT NULL,
 Gender VARCHAR(1) NOT NULL,
 Udate DATE NOT NULL,
 ID VARCHAR(30) NOT NULL,
 Passward VARCHAR(30) NOT NULL,
 PhoneNumber VARCHAR(30),
 E_mail VARCHAR(256),
 Log VARCHAR(256),
 Information VARCHAR(256),
 PRIMARY KEY(UNO),
 UNIQUE(ID)
);

CREATE TABLE MESSAGE(
 MNO VARCHAR(10) NOT NULL,
 Seq SmallINT NOT NULL,
 UNO VARCHAR(10) NOT NULL,
 CNO VARCHAR(10) NOT NULL,
 RNO VARCHAR(10) NOT NULL,
 Content VARCHAR(256) NOT NULL,
 MessageTime DATE NOT NULL,
 PRIMARY KEY(MNO)
);

CREATE TABLE EATABLE(
 ENO VARCHAR(10) NOT NULL,
 Place VARCHAR(256) NOT NULL,
 X FLOAT(4) NOT NULL,
 Y FLOAT(4) NOT NULL,
 PRIMARY KEY(ENO)
);

CREATE TABLE FOOD_ROOM(
 RNO VARCHAR(10) NOT NULL,
 FOOD VARCHAR(30) NOT NULL,
 PRIMARY KEY(RNO,FOOD)
);

alter table DELIVER_ROOM 

add constraint DELIVER_ROOM_uno_fk

foreign key(UNO)

references USER(UNO) 

ON DELETE CASCADE ON UPDATE CASCADE
;

alter table SPORTS_ROOM 

add constraint SPORTS_ROOM_uno_fk

foreign key(UNO)

references USER(UNO) 

ON DELETE CASCADE ON UPDATE CASCADE
;

alter table GAME_ROOM 

add constraint GAME_ROOM_uno_fk

foreign key(UNO)

references USER(UNO) 

ON DELETE CASCADE ON UPDATE CASCADE
;

alter table STUDY_ROOM 

add constraint STUDY_ROOM_uno_fk

foreign key(UNO)

references USER(UNO) 

ON DELETE CASCADE ON UPDATE CASCADE
;

alter table CONTEST_ROOM 

add constraint CONTEST_ROOM_uno_fk

foreign key(UNO)

references USER(UNO) 

ON DELETE CASCADE ON UPDATE CASCADE
;

alter table MESSAGE
add constraint MESSAGE_uno_fk

foreign key(UNO)

references USER(UNO) 

ON DELETE CASCADE ON UPDATE CASCADE
;

INSERT into USER values('1','KIM','M','2018-10-31','KIMID','1234','1234-1234','KIM@NAVER.COM','abc','def');